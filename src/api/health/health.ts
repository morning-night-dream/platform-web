/**
 * Generated by orval v6.12.1 üç∫
 * Do not edit manually.
 * Morning Night Dream - AppGateway
 * This is the AppGateway API documentation.
 * OpenAPI spec version: 0.0.1
 */
import useSwr from 'swr'
import type {
  SWRConfiguration,
  Key
} from 'swr'
import { customInstance } from '.././client';


  
  // eslint-disable-next-line
  type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;

/**
 * „Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
 * @summary „Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
 */
export const v1Health = (
    
 options?: SecondParameter<typeof customInstance>) => {
      return customInstance<void>(
      {url: `/v1/health`, method: 'get'
    },
      options);
    }
  

export const getV1HealthKey = () => [`/v1/health`];

    
export type V1HealthQueryResult = NonNullable<Awaited<ReturnType<typeof v1Health>>>
export type V1HealthQueryError = unknown

export const useV1Health = <TError = unknown>(
  options?: { swr?:SWRConfiguration<Awaited<ReturnType<typeof v1Health>>, TError> & { swrKey?: Key, enabled?: boolean }, request?: SecondParameter<typeof customInstance> }

  ) => {

  const {swr: swrOptions, request: requestOptions} = options ?? {}

  const isEnabled = swrOptions?.enabled !== false
    const swrKey = swrOptions?.swrKey ?? (() => isEnabled ? getV1HealthKey() : null);
  const swrFn = () => v1Health(requestOptions);

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, swrOptions)

  return {
    swrKey,
    ...query
  }
}

